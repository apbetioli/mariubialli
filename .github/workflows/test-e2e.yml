name: Cypress Tests

env:
  GRAPHQL_CONTENT_ENDPOINT: ${{ secrets.GRAPHQL_CONTENT_ENDPOINT }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  NEXTAUTH_SECRET: ${{ secrets. NEXTAUTH_SECRET}}
  EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
  EMAIL_SERVER_PORT: ${{ secrets.EMAIL_SERVER_PORT }}
  EMAIL_SERVER_HOST: ${{ secrets.EMAIL_SERVER_HOST }}
  EMAIL_SERVER_PASSWORD: ${{ secrets.EMAIL_SERVER_PASSWORD }}
  EMAIL_SERVER_USER: ${{ secrets.EMAIL_SERVER_USER }}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cypress run
        #uses: cypress-io/github-action@v2
        uses: ./
        # let's give this action an ID so we can refer
        # to its output values later
        id: cypress
        # Continue the build in case of an error, as we need to set the
        # commit status in the next step, both in case of success and failure
        continue-on-error: true
        with:
          build: yarn build
          start: yarn start
          working-directory: examples/recording
          record: true
          parallel: true
          group: Recording example
          tag: action
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.EXAMPLE_RECORDING_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # see "outcome" and "conclusion" of a step doc
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#steps-context
      # "output" can be success, failure, cancelled, or skipped
      - name: Print Dashboard URL
        run: |
          echo Cypress finished with: ${{ steps.cypress.outcome }}
          echo See results at ${{ steps.cypress.outputs.dashboardUrl }}
